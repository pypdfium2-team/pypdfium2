# SPDX-FileCopyrightText: 2025 geisserml <geisserml@gmail.com>
# SPDX-License-Identifier: Apache-2.0 OR BSD-3-Clause

name: Test Sourcebuild

on:
  workflow_dispatch:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  
  test_sourcebuild:
    
    strategy:
      fail-fast: false
      matrix:
        # NOTE On GH actions, macOS <=13 is Intel, whereas macOS >=14 will be ARM64
        # NOTE Google's toolchain doesn't seem to run on Linux arm64 natively. The toolchain-free build should work, though.
        os: ['ubuntu-latest', 'macos-13', 'macos-14', 'windows-latest']  # 'ubuntu-24.04-arm'
        build_mode: ['toolchained']
        include:
          - os: 'ubuntu-latest'
            build_mode: 'syslibs'
          - os: 'ubuntu-latest'
            build_mode: 'native-gcc'
          - os: 'ubuntu-24.04-arm'
            build_mode: 'native-gcc'
          - os: 'ubuntu-latest'
            build_mode: 'native-clang'
          - os: 'ubuntu-24.04-arm'
            build_mode: 'native-clang'
    
    runs-on: ${{ matrix.os }}
    
    steps:
      
      - uses: extractions/setup-just@v3
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Check out pypdfium2 repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          fetch-depth: 0  # quick fix for `git describe`
      
      - name: Install python deps
        run: python3 -m pip install -U -r req/setup.txt -r req/test.txt
      
      - name: Install system libraries
        if: ${{ matrix.build_mode == 'syslibs' || startsWith(matrix.build_mode, 'native') }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libfreetype-dev liblcms2-dev libjpeg-dev libopenjp2-7-dev libpng-dev zlib1g-dev libicu-dev libtiff-dev libglib2.0-dev
      
      - name: Install system tools
        if: ${{ startsWith(matrix.build_mode, 'native') }}
        run: sudo apt-get install -y generate-ninja ninja-build
      
      - name: Build PDFium (toolchained)
        if: ${{ matrix.build_mode == 'toolchained' }}
        run: python3 ./setupsrc/pypdfium2_setup/build_toolchained.py
      
      - name: Build PDFium (toolchained, with syslibs)
        if: ${{ matrix.build_mode == 'syslibs' }}
        run: python3 ./setupsrc/pypdfium2_setup/build_toolchained.py --use-syslibs
      
      - name: Build PDFium (native, gcc)
        if: ${{ matrix.build_mode == 'native-gcc' }}
        run: python3 ./setupsrc/pypdfium2_setup/build_native.py --compiler gcc
      
      - name: Build PDFium (native, clang)
        if: ${{ matrix.build_mode == 'native-clang' }}
        run: |
          # NOTE alternatively, --clang-path /usr/lib/llvm-18 might work on Ubuntu? Not sure.
          VERSION=18
          ARCH=$(uname -m)
          sudo apt-get install -y llvm lld
          sudo ln -s /usr/lib/clang/$VERSION/lib/linux /usr/lib/clang/$VERSION/lib/$ARCH-unknown-linux-gnu
          sudo ln -s /usr/lib/clang/$VERSION/lib/linux/libclang_rt.builtins-$ARCH.a /usr/lib/clang/$VERSION/lib/linux/libclang_rt.builtins.a
          python3 ./setupsrc/pypdfium2_setup/build_native.py --compiler clang
      
      - name: Install
        run: PDFIUM_PLATFORM="sourcebuild" python3 -m pip install .
      
      # must show matching pdfium version with sourcebuild origin
      - name: Check version
        run: pypdfium2 -v
      
      - name: Run test suite
        run: just test
