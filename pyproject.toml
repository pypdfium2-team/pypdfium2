# SPDX-FileCopyrightText: 2025 geisserml <geisserml@gmail.com>
# SPDX-FileContributor: 2025 wojiushixiaobai <296015668@qq.com>
# SPDX-License-Identifier: Apache-2.0 OR BSD-3-Clause

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "packaging",
    # XXX dependence on wheel is historical, with setuptools >= v70.1.0 this is not needed anymore
    "wheel !=0.38.0, !=0.38.1",
    "ctypesgen @ git+https://github.com/pypdfium2-team/ctypesgen@pypdfium2",
]

[tool.cibuildwheel]
build-frontend = "build"
test-command = [
    "python -m pypdfium2 --version",
    "python {project}/conda/raw/minitest.py",
]

[[tool.cibuildwheel.overrides]]
# run actual test suite on platforms that have pillow and numpy prebuilds on PyPI
select = "*-manylinux_{x86_64,aarch64} *-macosx_{x86_64,arm64} *-win_amd64"
test-requires = ["pytest", "pillow", "numpy"]
inherit.test-command = "append"
test-command = [
    "python -m pytest {project}/tests",
]

[tool.cibuildwheel.linux]
before-all = [
    "dnf -y install ninja-build freetype-devel lcms2-devel libjpeg-devel openjpeg2-devel libpng-devel libtiff-devel zlib-devel glib2-devel",
    "sh -c 'dnf -y install gn || true'",  # not manylinux_{riscv64,loongarch64}
]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = [
    "apk add gn ninja-build freetype-dev lcms2-dev jpeg-dev openjpeg-dev libpng-dev tiff-dev zlib-dev glib-dev",
]

[tool.cibuildwheel.linux.environment]
PDFIUM_PLATFORM = "sourcebuild-native"
BUILD_PARAMS = "--vendor icu"

[[tool.cibuildwheel.overrides]]
select = "*-manylinux_{aarch64,loongarch64}"
inherit.before-all = "append"
before-all = [
    "export PREFIX=$(python {package}/utils/get_gcc_prefix.py)",
    "export GCC_ROOT='/opt/rh/gcc-toolset-14/root'",
    "ln -s $GCC_ROOT/bin/gcc $GCC_ROOT/bin/$PREFIX-gcc",
    "ln -s $GCC_ROOT/bin/g++ $GCC_ROOT/bin/$PREFIX-g++",
    "ln -s $GCC_ROOT/bin/nm $GCC_ROOT/bin/$PREFIX-nm",
    "ln -s $GCC_ROOT/bin/readelf $GCC_ROOT/bin/$PREFIX-readelf",
    "ln -s $GCC_ROOT/bin/ar $GCC_ROOT/bin/$PREFIX-ar",
]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux_{aarch64,armv7l,riscv64,loongarch64} *-manylinux_riscv64"
inherit.before-all = "append"
before-all = [
    "export PREFIX=$(python {package}/utils/get_gcc_prefix.py)",
    "ln -s /usr/bin/gcc /usr/bin/$PREFIX-gcc",
    "ln -s /usr/bin/g++ /usr/bin/$PREFIX-g++",
    "ln -s /usr/bin/nm /usr/bin/$PREFIX-nm",
    "ln -s /usr/bin/readelf /usr/bin/$PREFIX-readelf",
    "ln -s /usr/bin/ar /usr/bin/$PREFIX-ar",
]

[[tool.cibuildwheel.overrides]]
select = "*-manylinux_loongarch64"
inherit.before-all = "append"
before-all = [
    "curl -L 'https://github.com/loong64/gn/releases/download/2024.12/gn-linux-loong64.tar.gz' | tar xz -C /usr/local/bin",
]

[[tool.cibuildwheel.overrides]]
select = "*-manylinux_riscv64"
inherit.before-all = "append"
before-all = [
    "export GN_ARCHIVE='./gn-linux-riscv64.zip'",
    "curl -L -o '$GN_ARCHIVE' 'https://chrome-infra-packages.appspot.com/dl/gn/gn/linux-riscv64/+/latest'",
    "unzip -j '$GN_ARCHIVE' gn -d /usr/local/bin",
    "unlink '$GN_ARCHIVE'",
]

[tool.cibuildwheel.macos.environment]
PDFIUM_PLATFORM = "sourcebuild-toolchained"

# set mac deployment target again for auditwheel
[[tool.cibuildwheel.overrides]]
select = "*-macosx_x86_64"
inherit.environment = "append"
environment.MACOSX_DEPLOYMENT_TARGET = "11.0.0"
environment.SYSTEM_VERSION_COMPAT = 0

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
inherit.environment = "append"
environment.MACOSX_DEPLOYMENT_TARGET = "14.0.0"

[tool.cibuildwheel.windows.environment]
PDFIUM_PLATFORM = "sourcebuild-toolchained"

[[tool.cibuildwheel.overrides]]
select = "*-win_arm64"
inherit.environment = "append"
environment.BUILD_PARAMS = "--target-cpu arm64"

[[tool.cibuildwheel.overrides]]
select = "*-win32"
inherit.environment = "append"
environment.BUILD_PARAMS = "--target-cpu x86"
