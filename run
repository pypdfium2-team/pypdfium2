#!/usr/bin/env -S bash -eu
# SPDX-FileCopyrightText: 2024 geisserml <geisserml@gmail.com>
# SPDX-License-Identifier: Apache-2.0 OR BSD-3-Clause

# FIXME
# - auto-completion?
# - running multiple commands at once
# - exit code propagation, stop-on-error

args="${@:2}"

function check() {
    autoflake src/ setupsrc/ tests/ setup.py docs/source/conf.py --recursive --remove-all-unused-imports --ignore-pass-statements --ignore-init-module-imports
    codespell --skip="./docs/build,./tests/resources,./tests/output,./data,./sourcebuild,./dist,./RELEASE.md,./.git,__pycache__,.mypy_cache,.hypothesis" -L "tabe,splitted,fith,flate"
    reuse lint
}

function clean() {
    rm -rf pypdfium2*.egg-info/ src/pypdfium2*.egg-info/ build/ dist/ data/* tests/output/* conda/bundle/out/ conda/helpers/out/ conda/raw/out/
}

function packaging_pypi() {
    clean
    check

    # calling update.py is not strictly necessary, but may improve performance because downloads are done in parallel, rather than linear with each package
    python3 setupsrc/pypdfium2_setup/update.py
    python3 setupsrc/pypdfium2_setup/craft.py

    twine check dist/*
    # ignore W002: erroneous detection of __init__.py files as duplicates
    check-wheel-contents dist/*.whl --ignore W002 --toplevel "pypdfium2,pypdfium2_raw"
}

set -x

case $1 in

test)
    python3 -m pytest tests/ $args;;

coverage)
    python3 -m coverage run --omit "tests/*,src/pypdfium2_raw/bindings.py,setupsrc/*" -m pytest tests/ $args
    python3 -m coverage report;;

docs-build)
    python3 -m sphinx -b html docs/source docs/build/html $args;;

docs-open)
    xdg-open docs/build/html/index.html $args &>/dev/null;;

check)
    check;;

clean)
    clean;;

packaging_pypi)
    packaging_pypi;;

update)
    python3 setupsrc/pypdfium2_setup/update.py $args;;

craft)
    python3 setupsrc/pypdfium2_setup/craft.py $args;;

craft-conda)
    python3 conda/craft_conda_pkgs.py $args;;

build)
    python3 setupsrc/pypdfium2_setup/sourcebuild.py $args;;

emplace)
    python3 setupsrc/pypdfium2_setup/emplace.py $args;;

*)
    echo Unknown command: $1;;

esac
